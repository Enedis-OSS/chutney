#SPDX-FileCopyrightText: 2017-2024 Enedis
#SPDX-License-Identifier: Apache-2.0

name: "Release on Github"

permissions:
  contents: write
  packages: write

on:
  workflow_call:
    inputs:
      publish-to-github-maven-registry:
        default: true
        type: boolean
        description: "Skip publish-to-github-maven-registry if false"
jobs:
  create-github-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: 'TODO'
          draft: false
          prerelease: false
    outputs:
      RELEASE_PATH: ${{ steps.create_release.outputs.upload_url }}

  publish-to-github-maven-registry:
    uses: ./.github/workflows/build-all-template.yml
    if: ${{inputs.publish-to-github-maven-registry}}
    with:
      release: true
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}
      maven-username: ${{ github.actor }}
      maven-password: ${{ secrets.GITHUB_TOKEN }}

  upload-assets-to-release:
    needs: [create-github-release]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix:
        include:
          - download_name: plugin-artifacts
            asset_path: artifacts/idea-plugin/build/distributions/chutney-idea-plugin-${{ github.ref_name }}.zip
            asset_name: chutney-idea-plugin-${{ github.ref_name }}.zip
            asset_content_type: application/zip
          - download_name: server-artifacts
            asset_path: artifacts/chutney/server/target/server-${{ github.ref_name }}-boot.jar
            asset_name: server-${{ github.ref_name }}-boot.jar
            asset_content_type: application/java-archive
    steps:
      - name: Get ${{ matrix.download_name }} from build job
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.download_name }}
          path: artifacts

      - name: Upload ${{ matrix.asset_name }} to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-github-release.outputs.RELEASE_PATH }}
          asset_path: ${{ matrix.asset_path }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: ${{ matrix.asset_content_type }}

